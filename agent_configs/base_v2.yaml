completion:
  confidence_threshold: 0.6
  natural_finish:
    idle_turn_limit: 1
    no_tool_turns_threshold: 2
  primary: hybrid
  provider_signals: true
  text_sentinels:
  - TASK COMPLETE
  - ALL TESTS PASSED
  - IMPLEMENTATION COMPLETE
  - '>>>>>> END RESPONSE'
  tool_finish: mark_task_complete
concurrency:
  at_most_one_of:
  - run_shell
  groups:
  - match_tools:
    - read_file
    - glob
    - grep
    - list_dir
    max_parallel: 4
    name: fs_reads
  - barrier_after: apply_unified_patch
    match_tools:
    - apply_unified_patch
    - apply_search_replace
    - run_shell
    max_parallel: 1
    name: edits_and_bash
  nonblocking_tools:
  - read_file
  - glob
  - grep
  - list_dir
hpo:
  enabled: false
  objective: episode_return
  params: {}
  search:
    algorithm: bayes-hyperband
    max_runs: 200
  wandb:
    entity: your_team
    mode: online
    project: raycoder
loop:
  sequence:
  - if: features.plan
    then:
      mode: plan
  - mode: build
  - do:
      mode: compact
    while: needs_compact
  turn_strategy:
    flow: assistant_continuation
    relay: tool_role
    tool_result_injection: summarize
modes:
- name: plan
  prompt: '@pack(base).plan'
  tools_disabled:
  - apply_unified_patch
  - apply_search_replace
  - run_shell
  tools_enabled:
  - read_file
  - list_dir
  - glob
  - grep
- name: build
  prompt: '@pack(base).builder'
  tools_enabled:
  - '*'
- name: compact
  prompt: '@pack(base).compact'
  tools_enabled: []
  triggers:
    tokens_remaining_pct_lt: 20
profile:
  description: maximally modular agent coder
  name: default
  seed: 42
prompts:
  cache:
    enabled: true
    key: sha256(config+prompts+toolset)
  evolution:
    enabled: false
    store_dir: ./implementations/prompt_evolution
  injection:
    per_turn_order:
    - mode_specific
    - '@pack(base).tools_catalog_short'
    system_order:
    - '@pack(base).system'
    - '[CACHE] @pack(base).tools_catalog_full'
  packs:
    base:
      builder: implementations/system_prompts/default.md
      compact: implementations/system_prompts/default.md
      plan: implementations/system_prompts/claude_code/system-workflow.prompt.md
      system: implementations/system_prompts/default.md
      tools_catalog_full: implementations/system_prompts/default.md
      tools_catalog_short: implementations/system_prompts/default.md
providers:
  default_model: openrouter/openai/gpt-5-nano
  models:
  - adapter: openai
    id: openrouter/openai/gpt-5-nano
    params:
      parallel_tools: true
      structured_outputs:
        enabled: true
        strict: true
      temperature: 0.2
    routing:
      disable_native_tools_on_probe_failure: true
      disable_stream_on_probe_failure: true
      fallback_models:
      - openrouter/openai/gpt-4o-mini
      - gpt-4o-mini
  - adapter: anthropic
    id: anthropic/claude-3-7-sonnet
    params:
      tool_use: true
  - adapter: openai
    id: openai/gpt-4o-mini
    params:
      temperature: 0.2
    routing:
      fallback_models:
      - openrouter/openai/gpt-5-nano
rl_and_evolution:
  policy_rl:
    enabled: false
  prompt_evolver:
    enabled: false
telemetry:
  database_path: ./perf/enhanced_tool_calling.db
  per_turn_metrics:
  - SVS
  - ACS
  - CPS
  - PAS
  - HMR
  - LED
  - SBS
  - TPF_DELTA
  - TE
  - LE
  - TOE
  - SPA
tools:
  aliases:
    edit: apply_search_replace
    patch: apply_unified_patch
  dialects:
    create_file_policy:
      aider_search_replace:
        prefer_write_file_tool: true
      unified_diff:
        header_style: git
        use_dev_null: true
    preference:
      by_model:
        anthropic/*:
          order:
          - aider_search_replace
          - unified_diff
        openrouter/openai/*:
          native: true
          order:
          - yaml_command
          - unified_diff
          - opencode_patch
      by_tool_kind:
        bash:
        - bash_block
        - provider_native
        diff:
        - unified_diff
        - aider_search_replace
        - opencode_patch
      default:
      - unified_diff
      - aider_search_replace
      - opencode_patch
      - bash_block
    selection:
      by_model:
        anthropic/*:
        - aider_search_replace
        - unified_diff
        openrouter/openai/*:
        - unified_diff
        - opencode_patch
      by_tool_kind:
        bash:
        - bash_block
        - provider_native
        diff:
        - unified_diff
        - aider_search_replace
        - opencode_patch
  overlays: []
  registry:
    include:
    - '*'
    paths:
    - implementations/tools/defs
version: 2
workspace:
  lsp:
    diagnostics_on_write: true
    enabled: true
    servers:
    - pyright
    - clangd
    - tsserver
  root: ./agent_ws
  sandbox:
    driver: docker
    image: gcc-dev:latest
    network: none
    resources:
      cpus: 2
      mem_gb: 8
    runtime: runsc
